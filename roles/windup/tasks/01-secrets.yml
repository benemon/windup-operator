---
- name: check for presence of amq password secret
  k8s_info:
    api_version: v1
    kind: Secret
    name: rhamt-amq-password-secret
    namespace: "{{ namespace }}"
  register: amq_password_secret

- name: create amq password secret if not present
  k8s:
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: rhamt-amq-password-secret
        namespace: "{{ namespace }}"
      data:
        password: "{{ lookup('password', '/dev/null length=12') | b64encode }}"
      type: Opaque
  when: amq_password_secret.resources | length == 0            

- name: check for presence of amq admin secret
  k8s_info:
    api_version: v1
    kind: Secret
    name: rhamt-amq-admin-secret
    namespace: "{{ namespace }}"
  register: amq_admin_secret

- name: create amq admin secret if not present
  k8s:
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: rhamt-amq-admin-secret
        namespace: "{{ namespace }}"
      data:
        password: "{{ lookup('password', '/dev/null length=12') | b64encode }}"
      type: Opaque
  when: amq_admin_secret.resources | length == 0

- name: check for presence of database secret
  k8s_info:
    api_version: v1
    kind: Secret
    name: rhamt-database-secret
    namespace: "{{ namespace }}"
  register: database_secret

- name: create database secret if not present
  k8s:
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: rhamt-database-secret
        namespace: "{{ namespace }}"
      data:
        username: "user{{ lookup('password', '/dev/null length=5') | b64encode }}"
        password: "{{ lookup('password', '/dev/null length=12') | b64encode }}"
      type: Opaque
  when: database_secret.resources | length == 0  

- name: check for presence of jgroups cluster password secret
  k8s_info:
    api_version: v1
    kind: Secret
    name: rhamt-jgroups-password-secret
    namespace: "{{ namespace }}"
  register: jgroups_password_secret

- name: create jgroups password secret if not present
  k8s:
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: rhamt-jgroups-password-secret
        namespace: "{{ namespace }}"
      data:
        password: "{{ lookup('password', '/dev/null length=8') | b64encode }}"
      type: Opaque
  when: jgroups_password_secret.resources | length == 0  

- name: check for presence of sso password secret
  k8s_info:
    api_version: v1
    kind: Secret
    name: rhamt-sso-password-secret
    namespace: "{{ namespace }}"
  register: sso_password_secret

- name: create sso password secret if not present
  k8s:
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: rhamt-sso-password-secret
        namespace: "{{ namespace }}"
      data:
        password: "{{ lookup('password', '/dev/null length=12') | b64encode }}"
      type: Opaque
  when: sso_password_secret.resources | length == 0

- name: check for presence of sso client secret
  k8s_info:
    api_version: v1
    kind: Secret
    name: rhamt-sso-client-secret
    namespace: "{{ namespace }}"
  register: sso_client_secret

- name: create sso client secret if not present
  k8s:
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: rhamt-sso-client-secret
        namespace: "{{ namespace }}"
      data:
        secret: "{{ lookup('password', '/dev/null length=8') | b64encode }}"
      type: Opaque
  when: sso_client_secret.resources | length == 0 