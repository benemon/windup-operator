---
- name: check for presence of amq secret
  k8s_info:
    api_version: v1
    kind: Secret
    name: rhamt-amq-secret
    namespace: "{{ meta.namespace }}"
  register: amq_secret

- name: create amq secret if not present
  k8s:
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: rhamt-amq-secret
        namespace: "{{ meta.namespace }}"
        labels:
          application: rhamt        
      data:
        username: "{{ 'jms-user' | b64encode }}"
        password: "{{ 'gthudfal' | b64encode }}"
        admin: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters') | b64encode }}"
      type: Opaque
  when: amq_secret.resources | length == 0            

- name: check for presence of database secret
  k8s_info:
    api_version: v1
    kind: Secret
    name: rhamt-database-secret
    namespace: "{{ meta.namespace }}"
  register: database_secret

- name: create database secret if not present
  k8s:
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: rhamt-database-secret
        namespace: "{{ meta.namespace }}"
        labels:
          application: rhamt        
      data:
        username: "user{{ lookup('password', '/dev/null length=5 chars=ascii_letters') | b64encode }}"
        password: "{{ lookup('password', '/dev/null length=12') | b64encode }}"
      type: Opaque
  when: database_secret.resources | length == 0  

- name: check for presence of jgroups secret
  k8s_info:
    api_version: v1
    kind: Secret
    name: rhamt-jgroups-password-secret
    namespace: "{{ meta.namespace }}"
  register: jgroups_secret

- name: create jgroups secret if not present
  k8s:
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: rhamt-jgroups-secret
        namespace: "{{ meta.namespace }}"
        labels:
          application: rhamt              
      data:
        password: "{{ lookup('password', '/dev/null length=8 chars=ascii_letters') | b64encode }}"
      type: Opaque
  when: jgroups_secret.resources | length == 0  

- name: check for presence of sso secret
  k8s_info:
    api_version: v1
    kind: Secret
    name: rhamt-sso-secret
    namespace: "{{ meta.namespace }}"
  register: sso_secret

- name: create sso secret if not present
  k8s:
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: rhamt-sso-secret
        namespace: "{{ meta.namespace }}"
        labels:
          application: rhamt              
      data:
        username:  "{{ 'admin' | b64encode }}"
        password: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters') | b64encode }}"
        secret: "{{ lookup('password', '/dev/null length=8 chars=ascii_letters') | b64encode }}"
      type: Opaque
  when: sso_secret.resources | length == 0